/******************************************************************************
*
*  LAYOUT SCALING
*
*  All rem rules are based on a 10px font size at desktop resolutions in a
*  1920 x 1080 window. This base font size is scaled down for smaller
*  resolutions and up for higher resolutions.
*
******************************************************************************/

html {
  /* Font size is set to 62.5% by default so that all future rem sizes are
       based on a 10px font. [6] */
  font-size: 62.5%;
}

/* For lower-resolution displays, the base font size is scaled from 6px up to
   8px at 1280 x 1024 and larger. */
@media only screen and (max-resolution: 90dpi),
  only screen and (-webkit-max-device-pixel-ratio: 0.9) {
  html {
    font-size: 37.5%;
  }
}

@media only screen and (max-resolution: 90dpi) and (min-width: 500px),
  only screen and (-webkit-max-device-pixel-ratio: 0.9) and (min-width: 500px) {
  html {
    font-size: 43.75%;
  }
}

@media only screen and (max-resolution: 90dpi) and (min-width: 750px),
  only screen and (-webkit-max-device-pixel-ratio: 0.9) and (min-width: 750px) {
  html {
    font-size: 50%;
  }
}

/* For medium-resolution displays, the base font size is scaled from 10px up to
   12px at 2560 x 1600 and larger. */
@media only screen and (min-resolution: 91dpi) and (max-resolution: 119dpi),
  only screen and (-webkit-min-device-pixel-ratio: 0.91) and (-webkit-max-device-pixel-ratio: 1) {
  html {
    font-size: 62.5%;
  }
}

@media only screen and (min-resolution: 91dpi) and (max-resolution: 119dpi) and (min-width: 1500px),
  only screen and (-webkit-min-device-pixel-ratio: 0.91) and (-webkit-max-device-pixel-ratio: 1) and (min-width: 1500px) {
  html {
    font-size: 68.75%;
  }
}

@media only screen and (min-resolution: 91dpi) and (max-resolution: 119dpi) and (min-width: 2500px),
  only screen and (-webkit-min-device-pixel-ratio: 0.91) and (-webkit-max-device-pixel-ratio: 1) and (min-width: 2500px) {
  html {
    font-size: 75%;
  }
}

/* For higher-resolution non-mobile displays, the base font size starts at 13px
   and goes up from there. */
@media only screen and (min-resolution: 120dpi) and (min-width: 1500px),
  only screen and (-webkit-min-device-pixel-ratio: 1.1) and (min-width: 1500px) {
  html {
    font-size: 81.25%;
  }
}

@media only screen and (min-resolution: 120dpi) and (min-width: 2000px),
  only screen and (-webkit-min-device-pixel-ratio: 1.1) and (min-width: 2000px) {
  html {
    font-size: 87.5%;
  }
}

@media only screen and (min-resolution: 120dpi) and (min-width: 2750px),
  only screen and (-webkit-min-device-pixel-ratio: 1.1) and (min-width: 2750px) {
  html {
    font-size: calc(87.5% + ((100vw - 500px) / 1000));
  }
}

/******************************************************************************
*
*   FLEXBOX-BASED COLUMNS
*
*   These classes provide the flexbox-based row-and-column layout from
*   milligram.css [2].
*
*   NOT SUPPORTED: Safari 8 (MacOS X 10.10)
*
******************************************************************************/

.row {
  display: flex;
  flex-direction: column;
  padding: 0;
  margin: 0;
  width: 100%;
}

.row .column {
  display: block;
  flex: 1 1 auto;
  margin-left: 0;
  max-width: 100%;
  width: 100%;
}

.row.row-no-padding {
  padding: 0;
}

.row.row-no-padding > .column {
  padding: 0;
}

.row.row-wrap {
  flex-wrap: wrap;
}

.row.row-top {
  align-items: flex-start;
}

.row.row-bottom {
  align-items: flex-end;
}

.row.row-center {
  align-items: center;
}

.row.row-stretch {
  align-items: stretch;
}

.row.row-baseline {
  align-items: baseline;
}

.row .column.column-offset-10 {
  margin-left: 10%;
}

.row .column.column-offset-20 {
  margin-left: 20%;
}

.row .column.column-offset-25 {
  margin-left: 25%;
}

.row .column.column-offset-33,
.row .column.column-offset-34 {
  margin-left: 33.3333%;
}

.row .column.column-offset-50 {
  margin-left: 50%;
}

.row .column.column-offset-66,
.row .column.column-offset-67 {
  margin-left: 66.6666%;
}

.row .column.column-offset-75 {
  margin-left: 75%;
}

.row .column.column-offset-80 {
  margin-left: 80%;
}

.row .column.column-offset-90 {
  margin-left: 90%;
}

.row .column.column-10 {
  flex: 0 0 10%;
  max-width: 10%;
}

.row .column.column-20 {
  flex: 0 0 20%;
  max-width: 20%;
}

.row .column.column-25 {
  flex: 0 0 25%;
  max-width: 25%;
}

.row .column.column-33,
.row .column.column-34 {
  flex: 0 0 33.3333%;
  max-width: 33.3333%;
}

.row .column.column-40 {
  flex: 0 0 40%;
  max-width: 40%;
}

.row .column.column-50 {
  flex: 0 0 50%;
  max-width: 50%;
}

.row .column.column-60 {
  flex: 0 0 60%;
  max-width: 60%;
}

.row .column.column-66,
.row .column.column-67 {
  flex: 0 0 66.6666%;
  max-width: 66.6666%;
}

.row .column.column-70 {
  flex: 0 0 70%;
  max-width: 70%;
}

.row .column.column-75 {
  flex: 0 0 75%;
  max-width: 75%;
}

.row .column.column-80 {
  flex: 0 0 80%;
  max-width: 80%;
}

.row .column.column-90 {
  flex: 0 0 90%;
  max-width: 90%;
}

.row .column .column-top {
  align-self: flex-start;
}

.row .column .column-bottom {
  align-self: flex-end;
}

.row .column .column-center {
  -ms-grid-row-align: center;
  align-self: center;
}

@media (min-width: 40rem) {
  .row {
    flex-direction: row;
  }

  .row .column {
    margin-bottom: inherit;
    padding: 0 1rem;
  }
}

/******************************************************************************
*
*   12 COLUMN GRID
*
*   These classes provide the 12-column grid from skeleton.css [6]. skeleton.css
*   set these columns to only work on displays wider than 550px, so for
*   compatibility, all of these rules are inside a media query. Instead of 550px,
*   the media query starts at the same 40rem as milligram's does.
*
*   The margin-left values are specific to skeleton.css and conflict with
*   milligram.css's margin-less columns, so that margin is applied only to
*   elements that match skeleton's selector style.
*
******************************************************************************/

@media (min-width: 40rem) {
  .one.column,
  .one.columns,
  .two.columns,
  .three.columns,
  .four.columns,
  .five.columns,
  .six.columns,
  .seven.columns,
  .eight.columns,
  .nine.columns,
  .ten.columns,
  .eleven.columns,
  .twelve.columns,
  .one-third.column,
  .two-thirds.column,
  .one-half.column {
    margin-left: 4%;
    padding: 0;
  }

  .one.column,
  .one.columns {
    width: 4.66666666667%;
  }

  .two.columns {
    width: 13.3333333333%;
  }

  .three.columns {
    width: 22%;
  }

  .four.columns {
    width: 30.6666666667%;
  }

  .five.columns {
    width: 39.3333333333%;
  }

  .six.columns {
    width: 48%;
  }

  .seven.columns {
    width: 56.6666666667%;
  }

  .eight.columns {
    width: 65.3333333333%;
  }

  .nine.columns {
    width: 74%;
  }

  .ten.columns {
    width: 82.6666666667%;
  }

  .eleven.columns {
    width: 91.3333333333%;
  }

  .twelve.columns {
    width: 100%;
  }

  .one-third.column {
    width: 30.6666666667%;
  }

  .two-thirds.column {
    width: 65.3333333333%;
  }

  .one-half.column {
    width: 48%;
  }

  .one.column:first-child,
  .one.columns:first-child,
  .two.columns:first-child,
  .three.columns:first-child,
  .four.columns:first-child,
  .five.columns:first-child,
  .six.columns:first-child,
  .seven.columns:first-child,
  .eight.columns:first-child,
  .nine.columns:first-child,
  .ten.columns:first-child,
  .eleven.columns:first-child,
  .twelve.columns:first-child,
  .one-third.column:first-child,
  .two-thirds.column:first-child,
  .one-half.column:first-child {
    margin-left: 0;
  }

  .offset-by-one.column,
  .offset-by-one.columns {
    margin-left: 8.66666666667%;
  }

  .offset-by-two.column,
  .offset-by-two.columns {
    margin-left: 17.3333333333%;
  }

  .offset-by-three.column,
  .offset-by-three.columns {
    margin-left: 26%;
  }

  .offset-by-four.column,
  .offset-by-four.columns {
    margin-left: 34.6666666667%;
  }

  .offset-by-five.column,
  .offset-by-five.columns {
    margin-left: 43.3333333333%;
  }

  .offset-by-six.column,
  .offset-by-six.columns {
    margin-left: 52%;
  }

  .offset-by-seven.column,
  .offset-by-seven.columns {
    margin-left: 60.6666666667%;
  }

  .offset-by-eight.column,
  .offset-by-eight.columns {
    margin-left: 69.3333333333%;
  }

  .offset-by-nine.column,
  .offset-by-nine.columns {
    margin-left: 78%;
  }

  .offset-by-ten.column,
  .offset-by-ten.columns {
    margin-left: 86.6666666667%;
  }

  .offset-by-eleven.column,
  .offset-by-eleven.columns {
    margin-left: 95.3333333333%;
  }

  .offset-by-one-third.column,
  .offset-by-one-third.columns {
    margin-left: 34.6666666667%;
  }

  .offset-by-two-thirds.column,
  .offset-by-two-thirds.columns {
    margin-left: 69.3333333333%;
  }

  .offset-by-one-half.column,
  .offset-by-one-half.columns {
    margin-left: 52%;
  }
}

/******************************************************************************
*
*   LAYOUT
*
*   Rules that impact the positioning of major layout elements.
*
******************************************************************************/

body {
  /* Ensure that the page body fills the display even if the content does not. [4] */
  min-height: 100vh;

  /* The following two rules allow the header and footer elements to be positioned
       correctly assuming they're all direct descendants of the <body> element. */
  display: flex;
  flex-direction: column;
}

header,
footer {
  /* Prevent these two elements from shrinking when content is added to the <body>
       element. */
  flex-shrink: 0;
}

main {
  /* Allow the <main> element to grow as necessary. */
  flex-grow: 1;
}
